[{"/Users/hafidzali/Work/ums/src/index.js":"1","/Users/hafidzali/Work/ums/src/App.js":"2","/Users/hafidzali/Work/ums/src/reportWebVitals.js":"3","/Users/hafidzali/Work/ums/src/server.js":"4","/Users/hafidzali/Work/ums/src/components/form.js":"5","/Users/hafidzali/Work/ums/src/components/modal.js":"6","/Users/hafidzali/Work/ums/src/components/edit.js":"7"},{"size":858,"mtime":1612769805246,"results":"8","hashOfConfig":"9"},{"size":6987,"mtime":1612780318215,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1612356397290,"results":"11","hashOfConfig":"9"},{"size":1209,"mtime":1612684429858,"results":"12","hashOfConfig":"9"},{"size":4494,"mtime":1612778048616,"results":"13","hashOfConfig":"9"},{"size":241,"mtime":1612777453759,"results":"14","hashOfConfig":"9"},{"size":4205,"mtime":1612778051773,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1qd8drk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"/Users/hafidzali/Work/ums/src/index.js",[],["32","33"],"/Users/hafidzali/Work/ums/src/App.js",[],"/Users/hafidzali/Work/ums/src/reportWebVitals.js",[],"/Users/hafidzali/Work/ums/src/server.js",[],"/Users/hafidzali/Work/ums/src/components/form.js",[],"/Users/hafidzali/Work/ums/src/components/modal.js",[],"/Users/hafidzali/Work/ums/src/components/edit.js",["34"],"import React, {useReducer, useState} from \"react\";\nimport { useMutation } from \"react-query\";\nimport { Container, Row, Col, Input, Button } from 'reactstrap';\n\nexport const Edit = ({refetch, id, handleClose}) => {\n    const initialState = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        dob: ''\n    }\n\n    const formReducer = (state, {type, payload}) => {\n        switch (type) {\n            case 'firstName':\n                return {...state, firstName: payload}\n            case 'lastName':\n                return {...state, lastName: payload}\n            case 'email':\n                return {...state, email: payload}\n            case 'dob':\n                return {...state, dob: payload}\n            default:\n                throw new Error()\n        }\n    }\n\n    const [state, dispatch] = useReducer(formReducer, initialState)\n    const [submitted, setSubmitted] = useState(false);\n    // const [isValid, setIsValid] = useState(false);\n\n      const editUser = useMutation(\n        () => fetch(`/api/users/${id}`, {\n            method: 'PATCH',\n            body: JSON.stringify(state)\n          })\n            .then((res) => res.json())\n            .then(refetch)\n      )\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(state.firstName) {\n            editUser.mutate({state})\n        }\n        setSubmitted(true)\n        handleClose()\n    }\n    return (\n        <Container>\n            <form onSubmit={handleSubmit}>\n                <Row className=\"p-2\">\n                    <Input\n                        id=\"firstName\"\n                        type=\"text\"\n                        placeholder=\"First Name\"\n                        name=\"firstName\"\n                        value={state.firstName}\n                        onChange={(e) => dispatch({type: 'firstName', payload: e.target.value})}\n                    />\n                    {submitted && !state.firstName && <span id='first-name-error'>Please enter a first name</span>}\n                </Row>\n                <Row className=\"p-2\">\n                    <Input\n                        className=\"mw-100 p-2\"\n                        data-testid=\"last-name-input\"\n                        id=\"lastName\"\n                        type=\"text\"\n                        placeholder=\"Last Name\"\n                        name=\"lastName\"\n                        value={state.lastName}\n                        onChange={(e) => dispatch({type: 'lastName', payload: e.target.value})}\n                    />\n                    {submitted && !state.lastName && <span id='last-name-error' className=\"text-danger\">Please enter a last name</span>}\n                </Row>\n\n                <Row className=\"p-2\">\n                        <Input\n                            className=\"mw-100 p-2\"\n                            data-testid=\"email-input\"\n                            id=\"email\"\n                            type=\"text\"\n                            placeholder=\"Email\"\n                            name=\"email\"\n                            value={state.email}\n                            onChange={(e) => dispatch({type: 'email', payload: e.target.value})}\n                        />\n                        {submitted && !state.email && <span id='email-error' className=\"text-danger\">Please enter email</span>}\n                    </Row>\n                    <Row className=\"p-2\">\n                        <Input\n                            className=\"mw-100 p-2\"\n                            data-testid=\"dob-input\"\n                            id=\"dob\"\n                            type=\"text\"\n                            placeholder=\"dob\"\n                            name=\"dob\"\n                            value={state.dob}\n                            onChange={(e) => dispatch({type: 'dob', payload: e.target.value})}\n                        />\n                        {submitted && !state.dob && <span id='dob-error' className=\"text-danger\">Please enter dob</span>}\n                    </Row>\n                <Row className=\"p-2\">\n                    <Button color=\"info\" className=\"w-100\" type='submit' value='Submit'>submit</Button>\n                </Row>\n            </form>\n        </Container>\n    );\n};\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":3,"column":26,"nodeType":"41","messageId":"42","endLine":3,"endColumn":29},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]